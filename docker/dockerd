#!/bin/sh

BASEDIR=$(dirname "$0")
. ${BASEDIR}/dockerd.env

cmd='sudo env PATH="${PATH}" /bin/sh -c "echo ${PATH}; export PATH=${PATH}; ${DOCKERD_BIN} ${DOCKERD_OPTS}"'

#echo "$cmd"

pid_file=$DOCKERD_PID
stdout_log=$DOCKERD_LOG
stderr_log=$DOCKERD_ERR

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting Docker Daemon"
        eval $cmd >> "$stdout_log" 2>> "$stderr_log" &
	for i in {1..20}
        do
            if is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
	echo "Docker daemon started"
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping Docker Daemon"
        sudo kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0

